// <auto-generated />
using System;
using KeToanCongNoPhaiThu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KeToanCongNoPhaiThu.Migrations
{
    [DbContext(typeof(ReceivableDbContext))]
    [Migration("20250912091509_FixKhachHang")]
    partial class FixKhachHang
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.ChiTietHoaDon", b =>
                {
                    b.Property<string>("MaCTHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaCTHD");

                    b.HasIndex("MaHD");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.CongNo", b =>
                {
                    b.Property<string>("MaCongNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("HanThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SoTienNo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCongNo");

                    b.HasIndex("MaKH");

                    b.ToTable("CongNos");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHD");

                    b.HasIndex("MaKH");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenKH")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.NguoiDung", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserID");

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.ThanhToan", b =>
                {
                    b.Property<string>("MaTT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiGhiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTienThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaTT");

                    b.HasIndex("MaHD");

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.ThongBao", b =>
                {
                    b.Property<string>("MaTB")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTB");

                    b.HasIndex("MaKH");

                    b.ToTable("ThongBaos");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("KeToanCongNoPhaiThu.Models.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.CongNo", b =>
                {
                    b.HasOne("KeToanCongNoPhaiThu.Models.KhachHang", "KhachHang")
                        .WithMany("CongNos")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.HoaDon", b =>
                {
                    b.HasOne("KeToanCongNoPhaiThu.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.ThanhToan", b =>
                {
                    b.HasOne("KeToanCongNoPhaiThu.Models.HoaDon", "HoaDon")
                        .WithMany("ThanhToans")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.ThongBao", b =>
                {
                    b.HasOne("KeToanCongNoPhaiThu.Models.KhachHang", "KhachHang")
                        .WithMany("ThongBaos")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("KeToanCongNoPhaiThu.Models.KhachHang", b =>
                {
                    b.Navigation("CongNos");

                    b.Navigation("HoaDons");

                    b.Navigation("ThongBaos");
                });
#pragma warning restore 612, 618
        }
    }
}
